// Voting Helper Functions
var db = require('../../models/models');


var FPP = {};

//adds a count field to each element in olist that is the total votes for those options
//room_id: current room
//olist: list of options
//callback: function(err, filled_olist)
function fillCounts(room_id, olist, callback){
	o.model.Vote.find({room: room_id}, function(err, votes){
		for(i = 0; i < olist.length; i++){
			olist[i].count = votes.filter(function(v){return v.option.equals(olist[i]._id);}).length;
		}
		callback(null, olist);
	});
}

//creates a list of option documents sorted in decending order of votes for a particular room and passes it to a callback function
//Room_Id: the room._id of the desired room to find the result of
//callback: function with fields: err, results
//			err: error
//			results: the list of sorted options
FPP.getResult = function(room_id, callback){
	db.model.Option.find({room: room_id}, function(err, ops){
		fillCounts(room_id, ops, function(err, results){
			results.sort(function(a, b){
				return b.count - a.count;
			});
			callback(null, results);
		});
	});
}

module.exports = FPP;
